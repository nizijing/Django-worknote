"""
Django settings for worknote project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import ldap
from django_auth_ldap.config import LDAPSearch, GroupOfNamesType
from .pro_setting import  *

'''An example of pro_setting.py

LDAP_SERVER='ldap://127.0.0.1:389'
LDAP_ADMIN='cn=root,dc=yourdc,dc=com'
LDAP_ADMIN_PASSWORD='yourpasswd'
LDAP_USER_SEARCH_TPYE='ou=Users,dc=yourdc,dc=cn'
LDAP_GROUP_SEARCH_TYPE='ou=Department,dc=yourdc,dc=cn'


MYSQL_HOST='127.0.0.1'
MYSQL_PORT='3306'
MYSQL_DB_NAME='dbname'
MYSQL_DB_USER='user'
MYSQL_DB_PASSWD='password'
'''


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

AUTH_LDAP_SERVER_URI = LDAP_SERVER
AUTH_LDAP_BIND_DN = LDAP_ADMIN
AUTH_LDAP_BIND_PASSWORD = LDAP_ADMIN_PASSWORD
#OU = unicode('OU=中文名,DC=uu,DC=yyy,DC=com', 'utf8')
AUTH_LDAP_USER_SEARCH = LDAPSearch(
    LDAP_USER_SEARCH_TPYE,
    ldap.SCOPE_SUBTREE,
    '(uid=%(user)s)',
	)

AUTH_LDAP_GROUP_SEARCH = LDAPSearch(
	LDAP_GROUP_SEARCH_TYPE,
	ldap.SCOPE_SUBTREE, "(objectClass=groupOfNames)"
	)

#AUTH_LDAP_GROUP_TYPE = GroupOfNamesType()

# This is the default, but I like to be explicit.
AUTH_LDAP_ALWAYS_UPDATE_USER = True

# Use LDAP group membership to calculate group permissions.
# AUTH_LDAP_FIND_GROUP_PERMS = True

# Cache distinguished names and group memberships for an hour to minimize
# LDAP traffic.
# AUTH_LDAP_CACHE_TIMEOUT = 1


# 先使用LDAP认证，如通过认证则不再使用后面的认证方式
AUTHENTICATION_BACKENDS = [
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
	]

#AUTH_LDAP_USER_FLAGS_BY_GROUP = {
#	'is_active':	'ou=Department,dc=pukkasoft,dc=cn',
#	'is_staff':		'cn=00test12345678,ou=Department,dc=pukkasoft,dc=cn',
#	'is_superuser': 'cn=00test12345678,ou=Department,dc=pukkasoft,dc=cn',
#	}

AUTH_LDAP_USER_ATTR_MAP = {  
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail",
	} 

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = DJANGO_SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True 

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pro.apps.ProConfig',
    'devices.apps.DevicesConfig',
    'import_export',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'worknote.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'worknote.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': MYSQL_HOST,
        'PORT': MYSQL_PORT,
        'NAME': MYSQL_DB_NAME,
        'USER': MYSQL_DB_USER,
        'PASSWORD': MYSQL_DB_PASSWD,
        'OPTIONS': {
            'init_command': "SET sql_mode='traditional'",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [ os.path.join(BASE_DIR,'srcs') ]
STATIC_ROOT = os.path.join(BASE_DIR, "static")
SIMPLEUI_ANALYSIS = False
SIMPLEUI_STATIC_OFFLINE = True
SIMPLEUI_LOGO = '/static/logo.png'
